using System;


class Program
{
    static void Main()
    {
        var pessoa = new Extrato("Joao Pedro Klippel");

        pessoa.AdicionarRegistro(new Registro(DateTime.Now.AddDays(-2), 100.50m, TipoRegistro.Deposito));
        pessoa.AdicionarRegistro(new Registro(DateTime.Now.AddDays(-1), 89.50m, TipoRegistro.Saque));
        pessoa.AdicionarRegistro(new Registro(DateTime.Now, 90.50m, TipoRegistro.Deposito));

        pessoa.ExibirExtrato();
        decimal saldoPessoa = pessoa.CalculaSaldo();
        Console.WriteLine($"Saldo de {pessoa.Nome} : R${saldoPessoa}\n");

        //pessoa.ExibirExtrato();

        var saldoDiario = pessoa.GerarSaldoDiario();
        foreach (var saldo in saldoDiario)
        {
            Console.WriteLine(saldo);
        }


    }

    public enum TipoRegistro
    {
        Deposito,
        Saque
    }
    class Registro
    {
        public DateTime Data { get; set;}
        public decimal Valor { get; set;}
        public TipoRegistro Tipo { get; set; }
        public Registro(DateTime data, decimal valor, TipoRegistro tipo)
        {
            Data = data;
            Valor = valor;
            Tipo = tipo;
        }
    }

    class Extrato
    {
        public string Nome { get; }
        public List<Registro> Registros { get; set; }

        public Extrato(string nome)
        {
            Nome = nome;
            Registros = new List<Registro>();
        }

        public void AdicionarRegistro(Registro registro)
        {
            Registros.Add(registro);
        }
        
        
        public void ExibirExtrato()
        {
            Console.WriteLine($"Extrato - {Nome}");
            Console.WriteLine("Data\t\tValor\t\tTipo");

            foreach (var registro in Registros)
            {
                Console.WriteLine($"{registro.Data.ToShortDateString()}\t{registro.Valor}\t\t{registro.Tipo}");
            }
        }

        public decimal CalculaSaldo()
        {
            decimal saldo = 0;

            foreach (var registro in Registros)
            {
                if(registro.Tipo == TipoRegistro.Saque)
                    saldo -= registro.Valor;
                else if (registro.Tipo == TipoRegistro.Deposito)
                    saldo += registro.Valor;
            }

            return saldo;
        }

        public List<string> GerarSaldoDiario()
        {
            var saldoDiario = new List<string>();
            var registrosPorData = Registros.GroupBy(r => r.Data.Date)
                                            .OrderBy(grupo => grupo.Key); 
            decimal saldoAcumulado = 0;

            foreach (var grupo in registrosPorData)
            {
                foreach (var registro in grupo)
                {
                    if (registro.Tipo == TipoRegistro.Saque)
                        saldoAcumulado -= registro.Valor;
                    else if (registro.Tipo == TipoRegistro.Deposito)
                        saldoAcumulado += registro.Valor;
                }

               
                saldoDiario.Add($"{grupo.Key.ToShortDateString()} - Saldo: R${saldoAcumulado:F2}");
            }

            return saldoDiario;
        }

    }
}


-------------------------------------------------------------------------------------------------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Linq;


class Program
{
    static void Main()
    {
        var contaJoao = new ContaCorrente("Joao Pedro Klippel", 150.50m);
        contaJoao.MostraConta();

        int flag = 0, opr;
        decimal valor;

        /*contaJoao.Depositar(90.00m);
        contaJoao.MostraConta();

        contaJoao.Saque(220.50m);
        contaJoao.MostraConta();

        contaJoao.Saque(20.50m);*/

        do
        {
            ImprimeMenu();
            try 
            {
                opr = int.Parse(Console.ReadLine());
            }
            catch
            {
                Console.WriteLine("Comando Inválido");
                continue;
            }

            switch(opr)
            {
                case 0:
                    flag = 1;
                    break;
                case 1:
                    valor = RetornaValor();
                    contaJoao.Depositar(valor);
                    break;
                case 2:
                    valor = RetornaValor();
                    contaJoao.Saque(valor);  
                    break;
                default:
                    Console.WriteLine("Comando Inválido");
                    break;
            }

        } while (flag != 1);


    }


    public class ContaCorrente
    {
        // Saldo é uma característica
        public decimal saldo { get; set; }
        // representa a pessoa que é proprietária desta conta
        public string nome {  get; set; }

        public ContaCorrente(string Nome, decimal Saldo)
        {
            saldo = Saldo;
            nome = Nome;  
        }

        // Depositar é uma ação
        public void Depositar(decimal valor)
        {
            saldo += valor;
            Console.WriteLine($"Depósito de R${valor} Realizado com Sucesso");
            Console.WriteLine($"Saldo Atual : R${saldo}");
        }

        // Sacar é uma ação
        public void Saque(decimal valor)
        {
            if (valor > saldo)
            {
                Console.WriteLine("Saldo Insuficiente para Saque");
            }
            else
            {
                saldo -= valor;
                Console.WriteLine($"Saque de R${valor} Realizado com Sucesso");
                Console.WriteLine($"Saldo Atual : R${saldo}");
            }
        }

        public void MostraConta()
        {
            Console.WriteLine(
                $"---------------------------------------\n" +
                $"Titular da conta: {nome}\n" +
                $"Saldo da conta: R${saldo}\n" +
                $"---------------------------------------");
        }

    }

    public static void ImprimeMenu()
    {
        Console.WriteLine(
            "-------------------\n" +
            "0 - Sair\n" +
            "1 - Depositar\n" +
            "2 - Sacar\n" +
            "-------------------");
    }

    public static decimal RetornaValor()
    {
        Console.Write("Digite o valor: R$");
        decimal valor = Convert.ToDecimal(Console.ReadLine());
        return valor;
    }
}
